###########################################################
# Package: Computer
###########################################################

homeassistant:
  customize:
    switch.athos_turn_on:
      icon: mdi:power

    switch.erebus_turn_on:
      icon: mdi:power

switch:
# power control
  - platform: wake_on_lan
    name: Athos Turn On
    mac_address: !secret wol_athos_mac
    host: !secret host_athos
    turn_off:
      - service: switch.turn_on
        entity_id: switch.athos_turn_off
  - platform: mqtt
    name: "Athos Sleep"
    icon: mdi:sleep
    state_topic: "computer/athos/power/status"
    command_topic: "computer/athos/power/sleep"
    payload_on: "1"
    payload_off: "0"
  - platform: mqtt
    name: "Athos Reboot"
    icon: mdi:reload
    state_topic: "computer/athos/power/status"
    command_topic: "computer/athos/power/reboot"
    payload_on: "1"
    payload_off: "0"
  - platform: mqtt
    name: "Athos Turn Off"
    icon: mdi:power
    state_topic: "computer/athos/power/status"
    command_topic: "computer/athos/power/shutdown"
    payload_on: "1"
    payload_off: "0"
  - platform: mqtt
    name: "Athos Lock"
    icon: mdi:lock
    state_topic: "computer/athos/power/lock/status"
    command_topic: "computer/athos/power/lock"
    payload_on: "1"
    payload_off: "0"
# media
  - platform: mqtt
    name: "Athos Mute"
    icon: mdi:volume-off
    state_topic: "computer/athos/media/mute"
    command_topic: "computer/athos/media/mute/set"
    payload_on: "1"
    payload_off: "0"

# power control
  - platform: wake_on_lan
    name: Erebus Turn On
    mac_address: !secret wol_erebus_mac
    host: !secret host_erebus
    turn_off:
      - service: switch.turn_on
        entity_id: switch.erebus_turn_off
  - platform: mqtt
    name: "Erebus Sleep"
    icon: mdi:sleep
    state_topic: "computer/erebus/power/status"
    command_topic: "computer/erebus/power/sleep"
    payload_on: "1"
    payload_off: "0"
  - platform: mqtt
    name: "Erebus Reboot"
    icon: mdi:reload
    state_topic: "computer/erebus/power/status"
    command_topic: "computer/erebus/power/reboot"
    payload_on: "1"
    payload_off: "0"
  - platform: mqtt
    name: "Erebus Turn Off"
    icon: mdi:power
    state_topic: "computer/erebus/power/status"
    command_topic: "computer/erebus/power/shutdown"
    payload_on: "1"
    payload_off: "0"
  - platform: mqtt
    name: "Erebus Lock"
    icon: mdi:lock
    state_topic: "computer/erebus/power/lock/status"
    command_topic: "computer/erebus/power/lock"
    payload_on: "1"
    payload_off: "0"
# media
  - platform: mqtt
    name: "Erebus Mute"
    icon: mdi:volume-off
    state_topic: "computer/erebus/media/mute"
    command_topic: "computer/erebus/media/mute/set"
    payload_on: "1"
    payload_off: "0"

sensor:
  - platform: mqtt
    state_topic: "computer/athos/media/volume"
    name: "Athos Volume"
    icon: mdi:volume-low
    value_template: "{{ value | round }}"
    unit_of_measurement: "%"

input_number:
  athos_volume:
    name: Volume Level
    icon: mdi:volume-low
    min: 0
    max: 100
    step: 1
    unit_of_measurement: "%"

automation:
  - alias: "[Athos] Power on Harmony Computer Activity"
    trigger:
      - platform: state
        entity_id: sensor.remote_family_room
        to: "Computer"
    action:
      - service: switch.turn_on
        entity_id: switch.athos_turn_on

  - alias: "[Athos] Sleep on Harmony Power Off"
    trigger:
      - platform: state
        entity_id: sensor.remote_family_room
        to: "Power Off"
    condition:
      - condition: state
        entity_id: sensor.device_athos
        state: "Online"
    action:
      - service: switch.turn_on
        entity_id: switch.athos_sleep

  - alias: "[Athos] Set Volume"
    hide_entity: true
    trigger:
      - platform: state
        entity_id: input_number.athos_volume
    action:
      - service: mqtt.publish
        data_template:
          payload: "{{ trigger.to_state.state | round }}"
          topic: "computer/athos/media/volume/set"

  - alias: "[Athos] Volume Changed"
    hide_entity: true
    trigger:
      - platform: state
        entity_id: sensor.athos_volume
    action:
      - delay: "00:00:20"
      - service: input_number.set_value
        data_template:
          entity_id: input_number.athos_volume
          value: "{{ states('sensor.athos_volume') | round }}"

  - alias: "[Erebus] Power on for Work"
    trigger:
      - platform: time
        at: "08:55:00"
    condition:
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
    action:
      - service: switch.turn_on
        entity_id: switch.erebus_turn_on
