###########################################################
# Package: Doors
###########################################################

homeassistant:
  customize_glob:
    "binary_sensor.door_*_sensor":
      hidden: true
    "sensor.door_*_alarm_level":
      hidden: true
    "sensor.door_*_alarm_type":
      hidden: true
    "sensor.door_*_burglar":
      hidden: true
    "sensor.door_*_sourcenodeid":
      hidden: true

    "zwave.door_*":
      icon: mdi:door

recorder:
  exclude:
    entities:
      - binary_sensor.door_front_sensor
      - sensor.door_front_alarm_level
      - sensor.door_front_alarm_type
      - sensor.door_front_burglar
      - sensor.door_front_sourcenodeid

      - binary_sensor.door_garage_entry_sensor
      - sensor.door_garage_entry_alarm_level
      - sensor.door_garage_entry_alarm_type
      - sensor.door_garage_entry_burglar
      - sensor.door_garage_entry_sourcenodeid

      - binary_sensor.door_back_sensor
      - sensor.door_back_alarm_level
      - sensor.door_back_alarm_type
      - sensor.door_back_burglar
      - sensor.door_back_sourcenodeid

      - binary_sensor.door_garage_outside_sensor
      - sensor.door_garage_outside_alarm_level
      - sensor.door_garage_outside_alarm_type
      - sensor.door_garage_outside_burglar
      - sensor.door_garage_outside_sourcenodeid

influxdb:
  exclude:
    entities:
      - binary_sensor.door_front_sensor
      - sensor.door_front_alarm_level
      - sensor.door_front_alarm_type
      - sensor.door_front_burglar
      - sensor.door_front_sourcenodeid

      - binary_sensor.door_garage_entry_sensor
      - sensor.door_garage_entry_alarm_level
      - sensor.door_garage_entry_alarm_type
      - sensor.door_garage_entry_burglar
      - sensor.door_garage_entry_sourcenodeid

      - binary_sensor.door_back_sensor
      - sensor.door_back_alarm_level
      - sensor.door_back_alarm_type
      - sensor.door_back_burglar
      - sensor.door_back_sourcenodeid

      - binary_sensor.door_garage_outside_sensor
      - sensor.door_garage_outside_alarm_level
      - sensor.door_garage_outside_alarm_type
      - sensor.door_garage_outside_burglar
      - sensor.door_garage_outside_sourcenodeid

group:
  all_doors:
    name: All Doors
    icon: mdi:door
    entities:
      - sensor.door_front
      - sensor.door_garage_entry
      - sensor.door_garage_outside
      - sensor.door_back

sensor:
  - platform: template
    sensors:
      door_front:
        friendly_name: Front Door
        value_template: >-
          {%- if is_state("sensor.door_front_alarm_level", "255") -%}
            {%- if is_state("sensor.door_front_burglar", "3") -%}
              Tampered
            {%- else -%}
              Open
            {%- endif %}
          {%- else -%}
            Closed
          {%- endif %}
        icon_template: >
          {%- if is_state("sensor.door_front_alarm_level", "255") -%}
            {%- if is_state("sensor.door_front_burglar", "3") -%}
              mdi:alert
            {%- else -%}
              mdi:door-open
            {%- endif %}
          {%- else -%}
            mdi:door
          {%- endif %}

      door_garage_entry:
        friendly_name: Garage Entry Door
        value_template: >-
          {%- if is_state("sensor.door_garage_entry_alarm_level", "255") -%}
            {%- if is_state("sensor.door_garage_entry_burglar", "3") -%}
              Tampered
            {%- else -%}
              Open
            {%- endif %}
          {%- else -%}
            Closed
          {%- endif %}
        icon_template: >
          {%- if is_state("sensor.door_garage_entry_alarm_level", "255") -%}
            {%- if is_state("sensor.door_garage_entry_burglar", "3") -%}
              mdi:alert
            {%- else -%}
              mdi:door-open
            {%- endif %}
          {%- else -%}
            mdi:door
          {%- endif %}

      door_garage_outside:
        friendly_name: Garage Outside Door
        value_template: >-
          {%- if is_state("sensor.door_garage_outside_alarm_level", "255") -%}
            {%- if is_state("sensor.door_garage_outside_burglar", "3") -%}
              Tampered
            {%- else -%}
              Open
            {%- endif %}
          {%- else -%}
            Closed
          {%- endif %}
        icon_template: >
          {%- if is_state("sensor.door_garage_outside_alarm_level", "255") -%}
            {%- if is_state("sensor.door_garage_outside_burglar", "3") -%}
              mdi:alert
            {%- else -%}
              mdi:door-open
            {%- endif %}
          {%- else -%}
            mdi:door
          {%- endif %}

      door_back:
        friendly_name: Sliding Door
        value_template: >-
          {%- if is_state("sensor.door_back_alarm_level", "255") -%}
            {%- if is_state("sensor.door_back_burglar", "3") -%}
              Tampered
            {%- else -%}
              Open
            {%- endif %}
          {%- else -%}
            Closed
          {%- endif %}
        icon_template: >
          {%- if is_state("sensor.door_back_alarm_level", "255") -%}
            {%- if is_state("sensor.door_back_burglar", "3") -%}
              mdi:alert
            {%- else -%}
              mdi:door-open
            {%- endif %}
          {%- else -%}
            mdi:door
          {%- endif %}

script:
  tts_door_status:
    alias: "Door Status"
    sequence:
    - service: tts.google_say
      entity_id: media_player.living_room_speaker
      data_template:
        message: >-
          {% set entities = states | selectattr('entity_id', 'in', state_attr('group.all_doors','entity_id')) | selectattr('state','eq','Open') | list %}
          {%- for entity in entities -%}
          {%- if loop.first %} The {% elif loop.last %}, and the {% else %}, the {% endif -%}
          {{ entity.name }}
          {%- endfor %}
          {%- if entities | length > 1 %} are open{% elif entities | length == 1 %} is open{% else %}No doors are open{% endif -%}.
        cache: false

automation:
  - alias: "[Notify] Door Left Open and Leaving"
    trigger:
      - platform: state
        entity_id: group.people
        to: "not_home"
    condition:
      - condition: or
        conditions:
        - condition: state
          entity_id: sensor.door_front
          state: "Open"
        - condition: state
          entity_id: sensor.door_back
          state: "Open"
        - condition: state
          entity_id: sensor.door_garage_entry
          state: "Open"
        - condition: state
          entity_id: sensor.door_garage_outside
          state: "Open"
    action:
      - service: notify.join_users
        data_template:
          title: "Door Left Open"
          message: "The {{ trigger.to_state.attributes.friendly_name }} was left open when you left!"
          data:
            icon: "https://raw.githubusercontent.com/zanix/home-assistant-config/master/www/icons/door-open.png"
            smallicon: "https://raw.githubusercontent.com/zanix/home-assistant-config/master/www/icons/home-assistant.png"

  - alias: "[Notify] Door Opened and Away"
    trigger:
      - platform: state
        entity_id:
          - sensor.door_front
          - sensor.door_back
          - sensor.door_garage_entry
          - sensor.door_garage_outside
        to: "Open"
    condition:
      - condition: state
        entity_id: group.people
        state: "not_home"
    action:
      - service: notify.join_users
        data_template:
          title: Door Opened
          message: "The {{ trigger.to_state.attributes.friendly_name }} opened and no one is home."
          data:
            icon: "https://raw.githubusercontent.com/zanix/home-assistant-config/master/www/icons/door-open.png"
            smallicon: "https://raw.githubusercontent.com/zanix/home-assistant-config/master/www/icons/home-assistant.png"

  - alias: "[Notify] Door Left Open"
    trigger:
      - platform: time
        minutes: "/1"
        seconds: "00"
    condition:
      - condition: template
        value_template: >
          {% set ns = namespace(found=false) %}
          {% set open_doors = states | selectattr('entity_id', 'in', state_attr('group.all_doors','entity_id')) | selectattr('state','eq','Open') | map(attribute='entity_id') | list %}
          {%- for entity_id in open_doors -%}
          {% set parts = entity_id.split('.') -%}
          {%- if (as_timestamp(now()) - as_timestamp(states[parts[0]][parts[1]].last_changed)) / 60 > 5 %}
          {% set ns.found = true %}
          {% endif -%}
          {%- endfor %}
          {{ ns.found }}
    action:
      - service: notify.join_all
        data_template:
          title: Door Open
          message: >
            {% macro last_changed(entity) %}{% if entity.state %}{% set uptime = (as_timestamp(now()) - as_timestamp(entity.last_changed)) | int %}{% set minutes = ((uptime % 3600) / 60) | int %}{% set hours = ((uptime % 86400) / 3600) | int %}{% set days = (uptime / 86400) | int %}{%- if days > 0 -%}{{ days }} day{%- if days > 1 -%}s{%- endif -%}{%- endif -%}{%- if hours > 0 -%}{%- if days > 0 -%}{{ ' ' }}{%- endif -%}{{ hours }} hour{%- if hours > 1 -%}s{%- endif -%}{%- endif -%}{%- if minutes > 0 -%}{%- if hours > 0 -%}{{ ' ' }}{%- endif -%}{{ minutes }} minute{%- if minutes > 1 -%}s{%- endif -%}{%- endif -%}{%- endif -%}{% endmacro %}
            {% set current = as_timestamp(now()) %}
            {% set open_doors = states | selectattr('entity_id', 'in', state_attr('group.all_doors','entity_id')) | selectattr('state','eq','Open') | list %}
            {%- for entity in open_doors if ( (current - as_timestamp(entity.last_changed)) / 60 > 5 and (((current - as_timestamp(entity.last_changed)) / 60) | int) % 5 == false ) -%}
            {%- if loop.first %} The {% elif loop.last %}, and the {% else %}, the {% endif -%}
            {{ entity.name }} has been open for {{ last_changed(entity) }}
            {%- endfor %}
          data:
            icon: "https://raw.githubusercontent.com/zanix/home-assistant-config/master/www/icons/door-open.png"
            smallicon: "https://raw.githubusercontent.com/zanix/home-assistant-config/master/www/icons/home-assistant.png"
      - service: tts.google_say
        entity_id: media_player.living_room_speaker
        data_template:
          message: >
            {% macro last_changed(entity) %}{% if entity.state %}{% set uptime = (as_timestamp(now()) - as_timestamp(entity.last_changed)) | int %}{% set minutes = ((uptime % 3600) / 60) | int %}{% set hours = ((uptime % 86400) / 3600) | int %}{% set days = (uptime / 86400) | int %}{%- if days > 0 -%}{{ days }} day{%- if days > 1 -%}s{%- endif -%}{%- endif -%}{%- if hours > 0 -%}{%- if days > 0 -%}{{ ' ' }}{%- endif -%}{{ hours }} hour{%- if hours > 1 -%}s{%- endif -%}{%- endif -%}{%- if minutes > 0 -%}{%- if hours > 0 -%}{{ ' ' }}{%- endif -%}{{ minutes }} minute{%- if minutes > 1 -%}s{%- endif -%}{%- endif -%}{%- endif -%}{% endmacro %}
            {% set current = as_timestamp(now()) %}
            {% set open_doors = states | selectattr('entity_id', 'in', state_attr('group.all_doors','entity_id')) | selectattr('state','eq','Open') | list %}
            Hey!
            {%- for entity in open_doors if ( (current - as_timestamp(entity.last_changed)) / 60 > 5 and (((current - as_timestamp(entity.last_changed)) / 60) | int) % 5 == false ) -%}
            {%- if loop.first %} The {% elif loop.last %}, and the {% else %}, the {% endif -%}
            {{ entity.name }} has been open for {{ last_changed(entity) }}
            {%- endfor %}
          cache: false
